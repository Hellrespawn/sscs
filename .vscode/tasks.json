{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Generate to-do",
            "type": "shell",
            "problemMatcher": [],
            "command": "sscs > doc/todo.txt",
            "presentation": {
                "reveal": "silent"
            },
        },
        {
            "label": "Run tests",
            "group": "test",
            "type": "shell",
            "problemMatcher": [],
            "command": "rm -rf tests/log && python3 -m unittest discover -v --failfast > doc/test_stdout.txt 2> doc/test.txt",
            "presentation": {
                "reveal": "silent"
            }
        },
        {
            "label": "Run and log all tests",
            "group": "test",
            "type": "shell",
            "problemMatcher": [],
            "command": "rm -rf tests/log && python3 -m unittest discover -vv --failfast > doc/test_stdout.txt 2> doc/test.txt",
            "presentation": {
                "reveal": "silent"
            }
        },
        {
            "label": "Clean and format source code",
            "problemMatcher": [],
            "dependsOrder": "sequence",
            "dependsOn": [
                "clean __pycache__",
                "isort",
                "black"
            ],
            "presentation": {
                "reveal": "silent"
            }
        },
        {
            "label": "black",
            "type": "shell",
            "problemMatcher": [],
            "command": "pipenv run python3 -m black -l 78 .",
            "presentation": {
                "reveal": "silent"
            }
        },
        {
            "label": "isort",
            "type": "shell",
            "problemMatcher": [],
            "command": "pipenv run python3 -m isort -rc .",
            "presentation": {
                "reveal": "silent"
            }
        },
        {
            "label": "clean __pycache__",
            "type": "shell",
            "problemMatcher": [],
            "command": "find . -type f -name '*.py[co]' -delete -o -type d -name __pycache__ -delete",
            "presentation": {
                "reveal": "silent"
            }
        },
        {
            "label": "Comprehensive linting",
            "problemMatcher": [],
            "dependsOn": [
                "bandit",
                "pylint",
                "flake8"
            ],
            "presentation": {
                "reveal": "silent"
            }
        },
        {
            "label": "flake8",
            "type": "shell",
            "problemMatcher": [],
            "command": "pipenv run python3 -m flake8 . > doc/flake8.txt",
            "presentation": {
                "reveal": "silent"
            }
        },
        {
            "label": "pylint",
            "type": "shell",
            "problemMatcher": [],
            "command": "pipenv run python3 -m pylint musictools > doc/pylint.txt; pipenv run python3 -m pylint tests >> doc/pylint.txt",
            "presentation": {
                "reveal": "never"
            }
        },
        {
            "label": "bandit",
            "type": "shell",
            "problemMatcher": [],
            "command": "pipenv run python3 -m bandit -c .bandit -r . > doc/bandit.txt",
            "presentation": {
                "reveal": "silent"
            }
        }
    ]
}
